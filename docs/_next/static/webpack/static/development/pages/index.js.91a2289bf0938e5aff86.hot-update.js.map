{"version":3,"file":"static/webpack/static/development/pages/index.js.91a2289bf0938e5aff86.hot-update.js","sources":["webpack:///./src/components/Loading/index.tsx"],"sourcesContent":["import React from 'react';\nimport { css, keyframes } from '@emotion/core';\nimport { rem } from '../../utils/styleUtils';\n\ninterface Props {\n  boxSize?: number;\n  width?: number;\n  animationTime?: number;\n  numBox?: number;\n  boxColor?: string;\n}\n\nconst Loading: React.FC<Props> = ({\n  boxSize = 20,\n  width = 180,\n  animationTime = 1200,\n  numBox = 3,\n  boxColor = 'skyblue',\n}) => {\n  const animationDelayStyles = (position: number) => css`\n    animation-delay: ${animationTime * (position / numBox)}ms;\n  `;\n\n  const boxStyles = Array.from(Array(numBox), (_, position) => animationDelayStyles(position));\n\n  const scaleEffects = keyframes`\n    from, ${Math.floor(200 / numBox)}%, to {\n      width: ${rem(boxSize)};\n      height: ${rem(boxSize)};\n      opacity: 0.5;\n    }\n    ${Math.floor(100 / numBox)}% {\n      width: ${rem(boxSize * 2)};\n      height: ${rem(boxSize * 2)};\n      opacity: 1;\n    }\n  `;\n\n  const containerStyles = css`\n    box-sizing: border-box;\n    margin-top: ${rem(40)};\n    margin-bottom: ${rem(40)};\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    max-width: ${rem(width)};\n    height: ${rem(boxSize * 2)};\n    width: 100%;\n    flex-flow: row;\n    justify-content: space-evenly;\n    align-items: center;\n\n    & > div {\n      width: ${rem(boxSize)};\n      height: ${rem(boxSize)};\n      opacity: 0.5;\n      background-color: ${boxColor};\n      animation-name: ${scaleEffects};\n      animation-duration: ${animationTime}ms;\n      animation-iteration-count: infinite;\n    }\n  `;\n\n  return (\n    <div css={containerStyles}>\n      {boxStyles.map(styles => (\n        <div key={styles.name} css={styles} />\n      ))}\n    </div>\n  );\n};\n\nexport default Loading;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAaA;AAAA;AAAA;AAyBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;;;;A","sourceRoot":""}