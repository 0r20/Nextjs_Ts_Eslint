{"version":3,"file":"static/webpack/static/development/pages/index.js.266202903852e8320a46.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport get from 'lodash/get';\nimport Loading from '../src/components/Loading';\nimport ManifestHead from '../src/components/Head/ManifestHead';\nimport Link from '../src/components/Link';\nimport dynamicStoreCallbackWrap from '../src/utils/redux/dynamicStoreCallbackWrap';\nimport { Store } from '../src/redux/store';\nimport count, { initialState } from '../src/redux/reducers/count';\nimport { addNumber, minusNumber } from '../src/redux/actions/actions';\nimport rootSaga from '../src/redux/sagas';\n\nexport interface State {\n  count: typeof initialState;\n}\n\nconst storeCallback = (store: Store) => {\n  store.substitueReducers({ count });\n  store.addSaga('root', rootSaga);\n};\n\nconst mapStateToProps = (state: State) => ({\n  numCount: get(state, 'count.count', 0),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  add2: () => dispatch(addNumber(2)),\n  minus3: () => dispatch(minusNumber(3)),\n});\n\ninterface Props extends ReturnType<typeof mapStateToProps>, ReturnType<typeof mapDispatchToProps> {}\n\nexport const Page: FC<Props> = ({ numCount, minus3, add2 }) => {\n  return (\n    <main>\n      <ManifestHead\n        title=\"Nextjs Typescript Eslint\"\n        themeColor=\"red\"\n        hrefPage=\"/\"\n        favIconPath=\"/static/icons/favicon.ico\"\n        appleIconPath=\"/static/icons/icon192x192.png\"\n        hrefManifest=\"/static/manifest/manifest.json\"\n      />\n      <span>This is index</span>\n      <div>{`Number is ${numCount}`}</div>\n      <button type=\"button\" onClick={add2}>\n        add 2\n      </button>\n      <button type=\"button\" onClick={minus3}>\n        minus 3\n      </button>\n      <Loading />\n      <Link href=\"/stats\" prefetch={false}>\n        <a>stats</a>\n      </Link>\n      <br />\n      <Link href=\"/about\" prefetch={false}>\n        <a>about</a>\n      </Link>\n    </main>\n  );\n};\n\nconst ConnectedPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default dynamicStoreCallbackWrap<Store>({ callback: storeCallback, Child: ConnectedPage });\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAKA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}